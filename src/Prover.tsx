import { useCallback, useContext, useEffect, useState } from "react";
import { plonk } from 'snarkjs'
import { getNZCPPubIdentity, getNZCPCircuitInput, PubIdentity, Proof, PublicSignals } from "./nzcpCircom";
import { RouteContext } from "./contexts";
import { EXAMPLE_WASM_FILE, EXAMPLE_ZKEY_FILE } from "./config";
import { CtaContainer } from "./styles";
import { PassInfo } from "./PassInfo";
import { Status, StatusError } from "./Status";

const real = true;

const proof0 = {
  A: [ "17285857194286030951643413384080770128102555891376275650920632385206886588209", "8146744797527597683612285820739161785613066720976189539337401542346009411025", "1" ],
  B: [ "15682504116274798503014934889003500525027713415048530262804470773169924756544", "16147034893940752680027763009018539429022116647353747304980448414620142532374", "1" ],
  C: [ "12085574453551961734401969337257584932726570462480358679465358620917939959720", "10067483988196768474380294571499252508931711761800186124617952567567149776216", "1" ],
  T1: [ "9341776045511567742705047838971603534293703828473589813224018950900935709358", "1991419358367301347015760791834569564955086211461334090131250296995947056397", "1" ],
  T2: [ "15139914011206602215573065149449112119374012195722218343755684376017158290698", "20962019652951085634301364474115330989894673248155900462739025467051618513157", "1" ],
  T3: [ "16051847535986722328308654216307776777454974101336585083035415812835527494703", "2481762947298090707152429542320583588166801204862240887274669870827553850369", "1" ],
  Wxi: [ "2969543294423175071507798246441250629865870147863651073753451271912936634631", "15467792113195698219865595327163140277104325078439095146927031196510092437254", "1" ],
  Wxiw: [ "15287833335678082990805431028497776140936741124163965407078004429260927474436", "384092082319840676379837130201641207993929791856035480592481747713766812750", "1" ],
  Z: [ "17233356032174959935462299411402444862306272851918465453525840747130034079125", "14330383888858615496931317939370288610560509893872354346781519905233457242924", "1" ],
  curve: "bn128",
  eval_a: "20873124803111981482158637286573548102186240982833174526255697778284927955180",
  eval_b: "14725117969359343640282739098483759411202136774012105531473320282499171717922",
  eval_c: "13522439859327188316271521022912781506058520813094819066815702996397417121410",
  eval_r: "3645660092017650040225974040904310034976842565433931976595237367298016916187",
  eval_s1: "245581223381763181115398381709173291740991302828802067918080773517942876358",
  eval_s2: "18283024571994954244371580939691607922437711646043720896247050161012382161604",
  eval_zw: "20841814415782754133466958283685247955238275734380821043703696797913083330243",
  protocol: "plonk",
}

const proof1 = {
  A: [ "1238594146091061460086298547708554191664704044096702776568785102453909425658", "8841920705257971482907510659735255057679610560178115978515618649462659047342", "1" ],
  B: [ "5418078768160962890201732751484525031596400690266530797981323902268767000266", "13518785979929061405507606158403758231836143180853098877245034333031700174120", "1" ],
  C: [ "9660351036540382152652564115806246533746602574072655972252129837290865997393", "16649072792050006083553333089312168406600162574702859755494283932846606587583", "1" ],
  T1: [ "15856107773850925553594460668240103809689000598186008109914612496430684117160", "11501607265943523379979563581942960382688140932512980474607298853329061150927", "1" ],
  T2: [ "2280323703396862318338120681168424482542757994191494969066068047715357033440", "18503594522414370728045790610381889005036775254207332444902308522999472045651", "1" ],
  T3: [ "18732720375028968260110130562824432067766947500741533687116851212886833922176", "20401277818514017933349384741850406521031596004785160463957563820431597859619", "1" ],
  Wxi: [ "17161960664151164623094057777634333265090672201249159357360863927781712351942", "18937620230692881175409538447403544129810591862510861555962611161016909468901", "1" ],
  Wxiw: [ "10591174932445662193784333346003644183220833328512499091933436095772680062083", "12300587606346831493839677682621080707835344815433165335732168325385845042856", "1" ],
  Z: [ "6842651795430382282961876556636162691531615154219050934184734226687017865625", "11843311409687125696857626751573456454065720711979221316878405938141998283291", "1" ],
  curve: "bn128",
  eval_a: "17055367490687604751072434848991276746054044933642198425678964375186844860138",
  eval_b: "15548840013730116296697832972155254918159411004069309700081677600040061164116",
  eval_c: "12997920464232060830324981595685740437740919801878822034385157206459719535",
  eval_r: "10407778018418921439811240628203516103490440776428603061250606119652324755645",
  eval_s1: "10845191449830576999677702103437202715324664300661980810044101352941447522677",
  eval_s2: "6285297590320562850055029950531065134152935872499338691934364547855556222480",
  eval_zw: "12160145485123894696472577317822963858322332935970412391694147617226279036393",
  protocol: "plonk",
}


const proof2 = {
  A: [ "15057435372137005443823921292581505574883969973452031483869393326608227523239", "17801286412679641107643414575408902374938141201937127182598852377555628237328", "1" ],
  B: [ "12701395171656587863546865256806383444140961324968005114994499143622682146774", "8616622578455720419194885898497654943242968954742546801059666526052080795197", "1" ],
  C: [ "14040256929027553228000428431485398500681987799936523332279973799999991338688", "7625482612995248944226504721915241419808602915762223287697332295282125259332", "1" ],
  T1: [ "5386268225323323801801295671689782096656301089593370205033107284197999509763", "7454806454955012355227720535603239513841684226419668048559841323697425795055", "1" ],
  T2: [ "5818643377258123588385168415971239075332685710261121175481712197547726063191", "13789393227514579977161299829436410159948745485208692070835468230784116847279", "1" ],
  T3: [ "18748197712255902928896609517547787388768962897428954461576387750184363595868", "15484763266458397859871069555539214287247548806660705648548836131812930949235", "1" ],
  Wxi: [ "19709252659723096002494232898129629755295954457449702195459121696343701472636", "20659577180052093934468867747872472032980540369684957682804491292809081853504", "1" ],
  Wxiw: [ "12359442149220375187365604862748950928057915661896015519886671240341971120094", "811535408174552956030959480704950917401517393463608629120339449294395514871", "1" ],
  Z: [ "6194239095628296099373042875313193509238279642977637584700630849025952011903", "17453421277544777770261980617570329697807347555913709972929558281157068631973", "1" ],
  curve: "bn128",
  eval_a: "2407863686460197496556125110826388237666864182923457944240001250503036272058",
  eval_b: "14800516990453672670648591908864176751659691203425302967409306647663801438167",
  eval_c: "10131613916725510774084917736238056488116135081021142403312001914065372002838",
  eval_r: "12829866713444048146362691706456659223966115531719309657229680579243823097428",
  eval_s1: "17231721011321408637737737001474511692434276231411930427988176453345085204688",
  eval_s2: "1622618469049066610896574675997712455256638063112436659365323776672129678820",
  eval_zw: "2356585475459963808826203673726332293254025103270879306028768450558886643065",
  protocol: "plonk",
}

const publicSignals = [
  "8464235439336389695359576364537904521787463454426143836621154307990710930",
  "334204042160295982690797293769892102755483197293558786265320143920457223185",
  "430989588176825940781496969207245773238692149205558489568811355968561479680",
] as const

const stub = {proof: proof1, publicSignals}

type Props = Readonly<{
  passURI: string
  address: string
}>;

export function Prover(props: Props) {
  const { passURI, address } = props
  const routeContext = useContext(RouteContext);
  const [proving, setProving] = useState(false);
  const [provingError, setProvingError] = useState<Error | null>(null);
  const [proof, setProof] = useState<Proof | null>(null);
  const [publicSignals, setPublicSignals] = useState<PublicSignals | null>(null);
  const [pubIdentity, setPubIdentity] = useState<PubIdentity | null>(null);

  const prove = useCallback(async function (passURI: string) {
    setProving(true)
    setProvingError(null)
    try {
      const pubIdentity = await getNZCPPubIdentity(passURI, address);
      setPubIdentity(pubIdentity)
      const circuitInput = getNZCPCircuitInput(passURI, address);

      let data;
      if (real) {
        console.time("fetch")
        const res = await fetch(EXAMPLE_ZKEY_FILE);
        const blob = await res.blob();
        console.log(blob)
        const zkeyurl = URL.createObjectURL(blob)
        console.log(zkeyurl)
        console.timeEnd("fetch")

        console.time("plonk")
        const realData = await plonk.fullProve(circuitInput, EXAMPLE_WASM_FILE, zkeyurl)
        console.log('realData',realData)
        console.timeEnd("plonk")

        data = realData
      }
      else {
        data = stub
      }

      const { proof, publicSignals } = data
      setProof(proof)
      setPublicSignals(publicSignals)
    }
    catch (e) {
      console.log((e as Error).stack)
      setProvingError(e as Error);
    }
    setProving(false);
  }, [address])

  useEffect(() => {
    prove(passURI)
  }, [passURI, prove])

  function proceed(proof: Proof, publicSignals: PublicSignals, pubIdentity: PubIdentity) {
    routeContext.navigate(["mint", { passURI, proof, publicSignals, pubIdentity }])
  }

  return (
    <div>
      <PassInfo passURI={passURI} />
      {proving ? <Status status="Proving, this may take a while..." /> : null}
      {provingError ? <StatusError error={provingError} /> : null}
      {proof && publicSignals && pubIdentity ? <Status status="Proof is ready" /> : null}
      <CtaContainer>
        {proof && publicSignals && pubIdentity ?
          <button type="button" onClick={() => proceed(proof, publicSignals, pubIdentity)} disabled={false}>Proceed</button> :
          <button type="button" disabled={true}>Proving...</button>}
      </CtaContainer>
    </div>
  );
}